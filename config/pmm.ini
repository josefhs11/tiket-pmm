[unix_http_server]
chmod = 0700

[supervisord]
childlogdir = /var/log/supervisor
nodaemon = true
pidfile = /tmp/supervisord.pid

[supervisorctl]
user = root

[program:nginx]
priority = 4
command = nginx
stdout_logfile = /var/log/nginx.log
stderr_logfile = /var/log/nginx.log
autorestart = true

[program:qan-api]
priority = 6
user = pmm
environment = PERCONA_DATASTORE_BASEDIR=/usr/share/percona-qan-api/src/github.com/percona/qan-api,PERCONA_DATASTORE_CONF=/etc/percona-qan-api.conf,BASE_PATH=/qan-api
# Sleep to wait for mysql to start up.
command = bash -c "sleep 5 && /usr/sbin/percona-qan-api -srcPath /usr/share/percona-qan-api/src -importPath github.com/percona/qan-api -runMode prod"
stdout_logfile = /var/log/qan-api.log
stderr_logfile = /var/log/qan-api.log
startretries = 60
autorestart = true
stopasgroup = true

## This is here to support data containers of v1.0.4.
#[program:createdb]
#priority = 8
## Sleep to wait for mysql to start up.
#command = bash -c "sleep 5 && mysql -uroot -vv -e \"CREATE DATABASE IF NOT EXISTS orchestrator; GRANT ALL PRIVILEGES ON orchestrator.* TO #'orchestrator'@'localhost' IDENTIFIED BY 'orchestrator'\""
#stdout_logfile = /var/log/createdb.log
#stderr_logfile = /var/log/createdb.log
#startretries = 60
#autorestart = unexpected

# support pmm-data containers <1.5.0
#[program:createdb2]
#priority = 8
## Sleep to wait for mysql to start up.
#command = bash -c 'sleep 5 && mysql -uroot -vv -e "CREATE DATABASE IF NOT EXISTS \`pmm-managed\`; GRANT ALL PRIVILEGES ON \`pmm-managed\`.* TO #\"pmm-managed\"@localhost IDENTIFIED BY \"pmm-managed\""'
#stdout_logfile = /var/log/createdb2.log
#stderr_logfile = /var/log/createdb2.log
#startretries = 60
#autorestart = unexpected

# support pmm-data containers <1.8.0
[program:createdb3]
priority = 8
# Sleep to wait for mysql to start up.
command = bash -c "sleep 5 && mysql -uroot -vv -e \"GRANT SELECT ON pmm.* TO 'grafana'@'localhost' IDENTIFIED BY 'N9mutoipdtlxutgi9rHIFnjM'\""
stdout_logfile = /var/log/createdb3.log
stderr_logfile = /var/log/createdb3.log
startretries = 60
autorestart = unexpected

#[program:orchestrator]
#priority = 9
#user = pmm
#directory = /usr/share/orchestrator
## Sleep to wait for mysql to start up.
#command = bash -c "sleep 7 && /usr/sbin/orchestrator -verbose http"
#stdout_logfile = /var/log/orchestrator.log
#stderr_logfile = /var/log/orchestrator.log
#startretries = 60
#autostart = false
#autorestart = true
#stopasgroup = true

[program:dashboard-upgrade]
priority = 10
command = /usr/share/percona-dashboards/import-dashboards.py
stdout_logfile = /var/log/dashboard-upgrade.log
stderr_logfile = /var/log/dashboard-upgrade.log
startsecs = 0
startretries = 60
autorestart = unexpected

#[program:node_exporter]
#priority = 11
#command =
#    /usr/local/percona/pmm-client/node_exporter
#        -web.listen-address=localhost:9100
#        -collectors.enabled=diskstats,filefd,filesystem,loadavg,meminfo,netdev,netstat,stat,time,uname,vmstat
#stdout_logfile = /var/log/node_exporter.log
#stderr_logfile = /var/log/node_exporter.log
#autorestart = true

[program:pmm-manage]
priority = 12
command =
    /usr/sbin/pmm-configurator
        -ssh-key-owner pmm
        -grafana-db-path /var/lib/grafana/grafana.db
stdout_logfile = /var/log/pmm-manage.log
stderr_logfile = /var/log/pmm-manage.log
autorestart = true

[program:pmm-managed]
priority = 13
command =
    /usr/sbin/pmm-managed
        -prometheus-config /etc/prometheus.yml
        -prometheus-url http://127.0.0.1:9090/prometheus
        -db-name pmm-managed
        -db-username pmm-managed
        -db-password pmm-managed
stdout_logfile = /var/log/pmm-managed.log
stderr_logfile = /var/log/pmm-managed.log
startretries = 1000000
autorestart = true
